문제 요약 및 아이디어

한 저명한 학자
n 개의 대학
제시한 금액 p
제한시간 d

ㅡㅡㅡㅡㅡ idea ㅡㅡㅡㅡㅡ
day와 d값이 바뀌었는지 
저장하는 check_d를 이용
d   p  day check_d
1, 10   1    1
1, 30   2    1
2, 50   3    2
2, 20   4    2



ㅡㅡㅡㅡㅡ idea ㅡㅡㅡㅡㅡ
p: 50, 10, 20, 30
d:  2,  1,  2,  1

1, 10
1, 30
2, 50
2, 20

day = 1
day == d 면

p_q
0 /// 30 -> ans




ㅡㅡㅡㅡㅡ idea ㅡㅡㅡㅡㅡ
d가 1인 경우만 
각 p들을 모두 비교하고
최대값을 ans에 더하기

d가 2인 경우만 
각 p들을 모두 비교하고
최대값을 ans에 더하기

... 반복 ...

서로 다른 d의 개수 만큼

ㅡㅡㅡㅡㅡ idea ㅡㅡㅡㅡㅡ
같은 d에서 p를 비교하고
최대 p를 가진 것만 넣으면?
같은 d에서

ㅡㅡㅡㅡㅡ idea ㅡㅡㅡㅡㅡ
d를 기준으로 오름차순 정렬
우선순위 큐를 만들어서 받음

[
    (1, p1),
    (1, p2),
    (2, p3),
    (2, p4),
    (3, p5),
]

day = 1 (선언&초기화)

우선순위 큐의 top이 
day와 같은 값이면 원소를 빼서
temp 배열에 모두 저장

temp 배열에서 최대값 p를 골라서 
ans 변수에 저장

day++;

다시 22줄부터 반복


ㅡㅡㅡㅡㅡ case 1 ㅡㅡㅡㅡㅡ
p: 50, 10, 20, 30
d:  2,  1,  2,  1

getMoney = 0

day1 - 4번 대학
getMoney += 30

day2 - 1번 대학
getMoney += 50

ans == getMoney == 80


ㅡㅡㅡㅡㅡ case 2 ㅡㅡㅡㅡㅡ
p: 10, 10, 10, 30
d:  2,  1,  2,  3

getMoney = 0

day1 - 2번 대학
getMoney += 10

day2 - 1번 or 3번 대학
getMoney += 10

day3 - 4번 대학
getMoney += 30

ans == getMoney == 80

